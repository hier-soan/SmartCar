C51 COMPILER V9.01   MOTOR                                                                 12/25/2021 20:03:03 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE MOTOR
OBJECT MODULE PLACED IN motor.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE src\motor.c BROWSE INCDIR(.\src;.\src) DEBUG OBJECTEXTEND PRINT(.\motor.lst
                    -) OBJECT(motor.obj)

line level    source

   1          #include "motor.h"
   2          
   3          sbit leftINForward = P0^0;                //FB=10时前进；FB=01时后退
   4          sbit leftINBackward = P0^1;
   5                  
   6          sbit rightINForward = P0^2;               //FB=10时前进；FB=01时后退
   7          sbit rightINBackward = P0^3;
   8          
   9          sbit leftEN = P0^4;                               //EN=0时电机停止
  10          sbit rightEN = P0^5;
  11          
  12          /*---------------运动函数---------------*/
  13          
  14          /*--------------------------------------*/
  15          #define goAhead         0
  16          #define goLeft          1
  17          #define goRight         2
  18          #define goBack          3
  19          #define stop            4
  20          
  21          int leftVal = 0;
  22          int rightVal = 0;
  23          
  24          //设置左右电机pwm预定占空比
  25          void motorValSet(int lVal, int rVal){
  26   1              if (lVal != 0 && rVal !=0){
  27   2                      leftVal = lVal;
  28   2                      rightVal = rVal;
  29   2                      leftEN = 1;
  30   2                      rightEN = 1;
  31   2              }else if (lVal == 0 && rVal ==0){
  32   2                      leftEN = 0;
  33   2                      rightEN = 0;
  34   2              }       
  35   1      }
  36          
  37          void forward(void){             //前进
  38   1              leftINForward = 1;      leftINBackward = 0;
  39   1              rightINForward = 1;     rightINBackward = 0;
  40   1      }
  41          
  42          void backward(void){    //后退
  43   1              leftINForward = 0;      leftINBackward = 1;
  44   1              rightINForward = 0;     rightINBackward = 1;
  45   1      }
  46          
  47          void leftward(void){    //左转
  48   1              leftINForward = 0;      leftINBackward = 1;
  49   1              rightINForward = 1;     rightINBackward = 0;
  50   1      }
  51          
  52          void rightward(void){   //右转
  53   1              leftINForward = 1;      leftINBackward = 0;
  54   1              rightINForward = 0;     rightINBackward = 1;
C51 COMPILER V9.01   MOTOR                                                                 12/25/2021 20:03:03 PAGE 2   

  55   1      }
  56          
  57          //舵机控制转向，电机全速冲
  58          void moveMotorServo(int status){ 
  59   1              if (status == 0){
  60   2                      motorValSet(20,20);
  61   2                      forward();
  62   2              }else if (status == 3){
  63   2                      motorValSet(20,20);
  64   2                      backward();
  65   2              }else if (status == 4){
  66   2                      motorValSet(0,0);
  67   2              }
  68   1      }
  69          
  70          //差速控制转向
  71          void moveMotorDiff(int status){
  72   1              if (status == 0){
  73   2                      motorValSet(20,20);
  74   2                      forward();
  75   2              }else if (status == 1){
  76   2                      motorValSet(20,20);
  77   2                      leftward();
  78   2              }else if (status == 2){
  79   2                      motorValSet(20,20);
  80   2                      rightward();
  81   2              }else if (status == 3){
  82   2                      motorValSet(20,20);
  83   2                      backward();
  84   2              }else if (status == 4){
  85   2                      motorValSet(0,0);
  86   2              }
  87   1      }
  88          
  89          /*-------------------PWM---------------------
  90          @pwmSetVal              pwm设定值                   
  91          @val                    pwm输出
  92          
  93          @function               通过pwm调制控制电机电压占空比                                                       
  94          @ex                             pwmMotorOut(liftVal,leftEN)         
  95          ---------------------------------------------*/
  96          int pwmLNowVal = 0;
  97          int pwmRNowVal = 0;
  98          int Flag = 1;
  99          
 100          void pwmMotorOut(int pwmNowVal, int pwmSetVal, int* val){
 101   1              pwmNowVal++;
 102   1              if (Flag){
 103   2                      if (pwmNowVal <= pwmSetVal){
 104   3                              val = 1;
 105   3                      }else {
 106   3                              val = 0;
 107   3                      }
 108   2                      if (pwmNowVal >= 20){
 109   3                              pwmNowVal = 0;
 110   3                      }
 111   2              }else {
 112   2                      pwmNowVal = 0;
 113   2              }
 114   1      }       
 115          
 116          /*--------------定时器0中断服务程序-----------------
C51 COMPILER V9.01   MOTOR                                                                 12/25/2021 20:03:03 PAGE 3   

 117                          1ms定时器中断
 118                  @leftMid
 119                  @rightMid         中间变量，用来控制EN使能                              
 120          ---------------------------------------------------*/
 121          int leftMid = 0;                        
 122          int rightMid = 0;
 123          
 124          void pit0Interrupt() interrupt 1{
 125   1              TR0 = 0;
 126   1              TH0 = 0xFC;
 127   1              TL0 = 0x18;
 128   1              pwmMotorOut(pwmLNowVal,leftVal,&leftMid);
 129   1              pwmMotorOut(pwmRNowVal,rightVal,&rightMid);
 130   1              leftEN = leftMid;
 131   1              rightEN = rightMid;
 132   1              TR0 = 1;
 133   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    313    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     14    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
